// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Gift renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Gift
    gift={
        Object {
            "id": 1,
          }
    }
    removeGift={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": <Form
        as="form"
>
        <FormGroup
                widths="equal"
        >
                <FormInput
                        as={[Function]}
                        className="input-person"
                        control={[Function]}
                        label="Person"
                        onChange={[Function]}
                        placeholder="person"
                />
                <FormInput
                        as={[Function]}
                        className="input-present"
                        control={[Function]}
                        label="Present"
                        onChange={[Function]}
                        placeholder="present"
                />
                <FormButton
                        as={[Function]}
                        className="btn-remove"
                        control={[Function]}
                        onClick={[Function]}
                >
                        Remove
                </FormButton>
        </FormGroup>
</Form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": <FormGroup
          widths="equal"
>
          <FormInput
                    as={[Function]}
                    className="input-person"
                    control={[Function]}
                    label="Person"
                    onChange={[Function]}
                    placeholder="person"
          />
          <FormInput
                    as={[Function]}
                    className="input-present"
                    control={[Function]}
                    label="Present"
                    onChange={[Function]}
                    placeholder="present"
          />
          <FormButton
                    as={[Function]}
                    className="btn-remove"
                    control={[Function]}
                    onClick={[Function]}
          >
                    Remove
          </FormButton>
</FormGroup>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <FormInput
              as={[Function]}
              className="input-person"
              control={[Function]}
              label="Person"
              onChange={[Function]}
              placeholder="person"
/>,
            <FormInput
              as={[Function]}
              className="input-present"
              control={[Function]}
              label="Present"
              onChange={[Function]}
              placeholder="present"
/>,
            <FormButton
              as={[Function]}
              className="btn-remove"
              control={[Function]}
              onClick={[Function]}
>
              Remove
</FormButton>,
          ],
          "widths": "equal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "className": "input-person",
              "control": [Function],
              "label": "Person",
              "onChange": [Function],
              "placeholder": "person",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "className": "input-present",
              "control": [Function],
              "label": "Present",
              "onChange": [Function],
              "placeholder": "present",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "function",
            "props": Object {
              "as": [Function],
              "children": "Remove",
              "className": "btn-remove",
              "control": [Function],
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Remove",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": <Form
          as="form"
>
          <FormGroup
                    widths="equal"
          >
                    <FormInput
                              as={[Function]}
                              className="input-person"
                              control={[Function]}
                              label="Person"
                              onChange={[Function]}
                              placeholder="person"
                    />
                    <FormInput
                              as={[Function]}
                              className="input-present"
                              control={[Function]}
                              label="Present"
                              onChange={[Function]}
                              placeholder="present"
                    />
                    <FormButton
                              as={[Function]}
                              className="btn-remove"
                              control={[Function]}
                              onClick={[Function]}
                    >
                              Remove
                    </FormButton>
          </FormGroup>
</Form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "as": "form",
          "children": <FormGroup
            widths="equal"
>
            <FormInput
                        as={[Function]}
                        className="input-person"
                        control={[Function]}
                        label="Person"
                        onChange={[Function]}
                        placeholder="person"
            />
            <FormInput
                        as={[Function]}
                        className="input-present"
                        control={[Function]}
                        label="Present"
                        onChange={[Function]}
                        placeholder="present"
            />
            <FormButton
                        as={[Function]}
                        className="btn-remove"
                        control={[Function]}
                        onClick={[Function]}
            >
                        Remove
            </FormButton>
</FormGroup>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <FormInput
                as={[Function]}
                className="input-person"
                control={[Function]}
                label="Person"
                onChange={[Function]}
                placeholder="person"
/>,
              <FormInput
                as={[Function]}
                className="input-present"
                control={[Function]}
                label="Present"
                onChange={[Function]}
                placeholder="present"
/>,
              <FormButton
                as={[Function]}
                className="btn-remove"
                control={[Function]}
                onClick={[Function]}
>
                Remove
</FormButton>,
            ],
            "widths": "equal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "className": "input-person",
                "control": [Function],
                "label": "Person",
                "onChange": [Function],
                "placeholder": "person",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "className": "input-present",
                "control": [Function],
                "label": "Present",
                "onChange": [Function],
                "placeholder": "present",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "as": [Function],
                "children": "Remove",
                "className": "btn-remove",
                "control": [Function],
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Remove",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
